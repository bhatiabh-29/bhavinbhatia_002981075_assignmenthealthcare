/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.location.City;
import model.location.Community;
import model.location.House;
import model.location.Residence;
import model.patient.Patient;
import model.patient.PatientDirectory;
import model.patient.PatientGenerator;
import model.person.Person;
import model.person.PersonDirectory;

/**
 *
 * @author bhavinbhatia
 */
public class SearchPatients extends javax.swing.JPanel {

     PatientDirectory patientDirectory;
    /**
     * Creates new form SearchPatients
     */
    public SearchPatients(PatientDirectory patientDirectory) {
        this.patientDirectory = patientDirectory;
        initComponents();
        displayDropDowns();
        displayPatients(patientDirectory.getPatients());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlePanel = new javax.swing.JPanel();
        lbltitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientSearchAsPerLocation = new javax.swing.JTable();
        CbCity = new javax.swing.JComboBox<>();
        CbComminuty = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        titlePanel.setBackground(new java.awt.Color(0, 204, 204));

        lbltitle.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle.setText("Location Based Search");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(lbltitle)
                .addContainerGap(320, Short.MAX_VALUE))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlePanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(lbltitle)
                .addGap(15, 15, 15))
        );

        tblPatientSearchAsPerLocation.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        tblPatientSearchAsPerLocation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Name", "Age", "City", "Community", "House Numer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatientSearchAsPerLocation);

        CbCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "City", "Boston", "Cambridge", "New York ", "San francisco", "Texas", "California", "Seattle" }));
        CbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbCityActionPerformed(evt);
            }
        });

        CbComminuty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Community", "Beacon Hill", "Back Bay", "Allston", "Quincy", "Medford", " " }));
        CbComminuty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbComminutyActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CbComminuty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(386, 386, 386)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CbCity, CbComminuty});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(CbComminuty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(0, 280, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CbCity, CbComminuty});

    }// </editor-fold>//GEN-END:initComponents

    private void CbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbCityActionPerformed

    private void CbComminutyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbComminutyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbComminutyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
        String cityName = (String) CbCity.getSelectedItem();
        String communityName = (String) CbComminuty.getSelectedItem();
 
        ArrayList<Patient> searchedPatients = this.patientDirectory
                .searchPatientsByLocation(cityName, communityName);
        
        displayPatients(searchedPatients);
        
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbCity;
    private javax.swing.JComboBox<String> CbComminuty;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JTable tblPatientSearchAsPerLocation;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables

    public void displayPatients(ArrayList<Patient> searchedPatients){
       
        DefaultTableModel model = (DefaultTableModel) tblPatientSearchAsPerLocation.getModel();
        model.setRowCount(0);
        
        for (Patient patient : searchedPatients){
            Residence residence = patient.getPerson().getResidence();
            Object [] row = new Object[7];
            row[0] = patient.getPatientId();
            row[1]= patient.getPerson().getName();
             row[2]= patient.getPerson().getAge();
            row[3]= residence.getCity().getCityName();
            row[4]= residence.getCommunity().getCommunityName();
            row[5]= residence.getHouse().getHouseNumber();     
            
            model.addRow(row);
          
        }

    
    }

    public void displayDropDowns() {
        DefaultComboBoxModel<String> cities = new DefaultComboBoxModel<>(
                PatientGenerator.CITIES
        );
        CbCity.setModel(cities);
        
        DefaultComboBoxModel<String> communities = new DefaultComboBoxModel<>(
                PatientGenerator.COMMUNITIES
        );
        CbComminuty.setModel(communities);
        
    }
}
